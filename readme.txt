# TCP 数据反转服务器 - README

## 项目概述
本项目实现了一个基于 TCP 协议的服务器，能够接收客户端发送的数据块，将其内容反转后返回给客户端。服务器采用多线程架构，支持同时处理多个客户端连接。

## 功能特点
- 多线程处理，支持并发客户端连接
- 精确处理网络字节流，避免数据分包问题
- 自定义二进制通信协议
- 错误处理机制，确保服务器稳定性

## 运行环境

### 软件要求
- **Python 3.6+** (推荐 Python 3.8+)
- 必需标准库:
  - `socket` - 网络通信
  - `struct` - 二进制数据打包/解包
  - `threading` - 多线程处理
  - `sys` - 命令行参数处理

### 操作系统兼容性
- Windows 10/11
- Linux (Ubuntu/Debian/CentOS)
- macOS

### 硬件要求
- 最低配置:
  - 1 GHz 处理器
  - 512 MB RAM
  - 10 MB 可用存储空间
- 推荐配置 (高并发场景):
  - 2 GHz 双核处理器
  - 1 GB RAM
  - 100 Mbps 网络连接

## 配置选项

### 命令行参数
| 参数 | 说明 | 默认值 | 示例 |
|------|------|--------|------|
| `<port>` | 服务器监听端口 | **无默认值** (必须指定) | `8888` |

### 网络配置
```python
# 在代码中可修改的配置项:
server_socket.bind(('0.0.0.0', port))  # 绑定所有网络接口
# 可改为特定IP，如:
# server_socket.bind(('192.168.1.100', port))  # 绑定到特定IP

server_socket.listen(5)  # 最大等待连接数
# 可根据服务器性能调整